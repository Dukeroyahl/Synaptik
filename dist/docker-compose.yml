version: '3.8'

# Main Docker Compose - Uses pinned versions for stability
# This is what users should use to try Synaptik

name: synaptik

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: synaptik-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: synaptik
    volumes:
      - ~/.synaptik/data/mongodb:/data/db
      - ~/.synaptik/logs/mongodb:/var/log/mongodb
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - synaptik-network

  # Backend Service
  synaptik-backend:
    image: roudranil/synaptik:1.0.0  # Pin to specific version for stability
    container_name: synaptik-backend
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_PROFILE=prod
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/synaptik
      - QUARKUS_LOG_FILE_PATH=/opt/synaptik/logs/synaptik.log
      - QUARKUS_LOG_LEVEL=INFO
    volumes:
      - ~/.synaptik/logs/backend:/opt/synaptik/logs
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - synaptik-network

  synaptik-frontend:
    image: nginx:alpine
    container_name: synaptik-frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      synaptik-backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - synaptik-network

networks:
  synaptik-network:
    name: synaptik-network
    driver: bridge
