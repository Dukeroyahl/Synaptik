version: '3.8'

# Development Docker Compose - Builds from source with hot reload
# This is for developers who want to test their changes

name: synaptik-dev

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: synaptik-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: synaptik
    volumes:
      # Development data (can be deleted safely)
      - synaptik_dev_data:/data/db
      - ./temp/logs/mongodb:/var/log/mongodb
    ports:
      - "27017:27017"  # Exposed for development tools
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - synaptik-dev-network

  # Backend API Server (Built from source)
  backend-dev:
    build:
      context: ../
      dockerfile: dist/docker/Dockerfile.backend
    container_name: synaptik-backend-dev
    restart: unless-stopped
    environment:
      # Development Configuration
      - QUARKUS_PROFILE=dev
      - QUARKUS_LOG_LEVEL=DEBUG
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/synaptik
      - QUARKUS_LIVE_RELOAD_INSTRUMENTATION=true
      - QUARKUS_HTTP_CORS_ORIGINS=*
      
      # Development flags
      - QUARKUS_DEV_SERVICES_ENABLED=false
      - SYNAPTIK_SECRET_KEY=dev-secret-key
    volumes:
      # Source code for hot reload
      - ../server:/opt/synaptik/server
      - ./temp/logs/backend:/opt/synaptik/logs
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - synaptik-dev-network

  # Frontend Web App (Vite dev server for hot reload)
  frontend-dev:
    image: node:20-alpine
    container_name: synaptik-frontend-dev
    working_dir: /app/client
    restart: unless-stopped
    volumes:
      # Source code for hot reload
      - ../client:/app/client
      - ./temp/logs/frontend:/app/logs
    ports:
      - "5173:5173"  # Vite dev server
    depends_on:
      backend-dev:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - synaptik-dev-network

  # Mongo Express (Database Admin UI for development)
  mongo-express-dev:
    image: mongo-express:latest
    container_name: synaptik-mongo-express-dev
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=dev123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - synaptik-dev-network

  # MCP Server (Development)
  mcp-server-dev:
    build:
      context: ../
      dockerfile: mcp-server/Dockerfile
    container_name: synaptik-mcp-dev
    restart: unless-stopped
    environment:
      - SYNAPTIK_URL=http://backend-dev:8080
      - NODE_ENV=development
    depends_on:
      backend-dev:
        condition: service_healthy
    stdin_open: true
    tty: true
    volumes:
      # Source code for development
      - ../mcp-server:/app/src
    networks:
      - synaptik-dev-network

# Development volumes (can be deleted safely)
volumes:
  synaptik_dev_data:
    driver: local

# Development network
networks:
  synaptik-dev-network:
    name: synaptik-dev-network
    driver: bridge
