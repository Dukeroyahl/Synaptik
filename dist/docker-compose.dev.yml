version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: synaptik-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: synaptik
    volumes:
      # Development: Use temp folder in workspace
      - ./temp/data:/data/db
      - ./temp/logs/mongodb:/var/log/mongodb
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - synaptik-network

  # Backend API Server (build from source)
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: synaptik-backend-dev
    restart: unless-stopped
    environment:
      # Application Configuration
      - QUARKUS_HTTP_PORT=8080
      - QUARKUS_LOG_LEVEL=DEBUG
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongodb:27017/synaptik
      
      # Development Performance Tuning
      - JAVA_OPTS=-Xmx1g -Xms512m
      
      # Security (dev keys are fine)
      - SYNAPTIK_SECRET_KEY=dev-secret-key
    volumes:
      # Development logs
      - ./temp/logs/backend:/opt/synaptik/logs
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - synaptik-network

  # Frontend Web App (build from source)
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: synaptik-frontend-dev
    restart: unless-stopped
    volumes:
      # Development logs
      - ./temp/logs/nginx:/var/log/nginx
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - synaptik-network

# Networks
networks:
  synaptik-network:
    name: synaptik-network-dev
    driver: bridge